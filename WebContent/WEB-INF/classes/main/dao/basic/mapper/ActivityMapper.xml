<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="main.dao.basic.ActivityDao">
	
	<sql id="sql_select">
		select * from activity 
	</sql>
	
	<sql id="sql_cols">
		id,activityId,goodsId,sortId,title,mark,createTime
	</sql>
	
	<sql id="sql_cols_value">
		#{id},#{activityId},#{goodsId},#{sortId},#{title},#{mark},#{createTime}
	</sql>
	
	<!-- 根据ID加载对应活动 -->
	<select id="loadById" resultType="activityBean">
		<include refid="sql_select"/> 
			where id = #{id};
	</select>
	
	<!-- 根据活动ID加载对应活动 -->
	<select id="loadByActivityId" resultType="activityBean">
		<include refid="sql_select"/> 
			where activityid = #{activityId};
	</select>
	
	<!-- 根据分类加载对应活动 -->
	<select id="loadBySort" resultType="activityBean">
		<include refid="sql_select"/> 
			where sortId=#{sortId} or sortId in (select id from sort where pid=#{sortPid}) 
			order by id desc 
			limit #{index},#{size};
	</select>
	
	<!-- 加载所有活动 -->
	<select id="loadAllActivity" resultType="activityBean">
		<include refid="sql_select"/> 
			order by id desc 
			limit #{index},#{size};
	</select>
	
	<!-- 加载所有活动,加入查询条件 -->
	<select id="loadAllActivity_search" resultType="activityBean">
		<include refid="sql_select"/> 
			where (goodsId like "%"#{searchContent}"%" or title like "%"#{searchContent}"%")
			order by id desc 
			limit #{index},#{size};
	</select>
	
	<!-- 查询表的数据总数量 -->
	<select id="count" resultType="int">
		select COUNT(*) from activity;
	</select>
	
	<!-- 插入列表数据 -->
	<insert id="save" parameterType="activityBean">
		insert into activity(<include refid="sql_cols"/>)  
             values(<include refid="sql_cols_value"/>)
	</insert>
	
	<!-- 更新列表数据 -->
	<update id="update" parameterType="activityBean">
		update activity
    		<set>
      			activityId = #{activityId},
      			goodsId = #{goodsId},
      			sortId = #{sortId},
      			title = #{title},
      			mark = #{mark},
      			createTime = #{createTime}
    		</set>
  		where id=#{id}
	</update>
	
	<!-- 删除列表数据 -->
	<delete id="deleteByActivityId" parameterType="activityBean">
    	delete from activity where activityid = #{activityId};
   	</delete>
</mapper>


