<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="main.dao.basic.OrdersDao">
	
	<sql id="sql_select">
		select * from orders      
	</sql>
	
	<sql id="sql_cols">
		id,orderId,payId,uid,shopId,goodsList,addressId,status,
		afterSaleService,payWay,createTime,payTime,deliverTime,receiveTime
	</sql>
	
	<sql id="sql_cols_value">
		#{id},#{orderId},#{payId},#{uid},#{shopId},#{goodsList},#{addressId},#{status},
		#{afterSaleService},#{payWay},#{createTime},#{payTime},#{deliverTime},#{receiveTime}
	</sql>
	
	<!-- 根据ID加载对应订单-->
	<select id="loadById" resultType="ordersBean">
		<include refid="sql_select"/> 
			where id = #{id};
	</select>
	
	<!-- 根据订单ID加载对应订单-->
	<select id="loadByOrderId" resultType="ordersBean">
		<include refid="sql_select"/> 
			where orderid = #{orderId};
	</select>
	
	<!-- 根据状态加载对应订单-->
	<select id="loadByStatus" resultType="ordersBean">
		<include refid="sql_select"/> 
			where status = #{status}
			order by id desc 
			limit #{index},#{size};
	</select>
	
	<!-- 根据用户ID和状态加载对应订单-->
	<select id="loadByUidAndStatus" resultType="ordersBean">
		<include refid="sql_select"/> 
			where uid = #{uid} and status = #{status};
	</select>
	
	<!-- 加载所有订单-->
	<select id="loadAllOrders" resultType="ordersBean">
		<include refid="sql_select"/> 
			order by id desc 
			limit #{index},#{size};
	</select>
	
	<!-- 查询表的数据总数量 -->
	<select id="count" resultType="int">
		select COUNT(*) from orders;
	</select>
	
	<!-- 查询表对应状态的数据数量 -->
	<select id="countByStatus" resultType="int">
		select COUNT(*) from orders where status = #{status};
	</select>
	
	<!-- 插入列表数据 -->
	<insert id="save" parameterType="ordersBean">
		insert into orders(<include refid="sql_cols"/>)  
             values(<include refid="sql_cols_value"/>)
	</insert>
	
	<!-- 更新列表数据 -->
	<update id="update" parameterType="ordersBean">
		update orders
    		<set>
      			orderId = #{orderId},
      			payId = #{payId},
      			uid = #{uid},
      			shopId = #{shopId},
      			goodsList = #{goodsList},
      			addressId = #{addressId},
      			status = #{status},
				afterSaleService = #{afterSaleService},
				payWay = #{payWay},
				createTime = #{createTime},
				payTime = #{payTime},
				deliverTime = #{deliverTime},
				receiveTime = #{receiveTime}
    		</set>
  		where id=#{id}
	</update>
	
	<!-- 删除列表数据 -->
	<delete id="deleteByOrderId" parameterType="ordersBean">
    	delete from orders where orderid = #{orderId};
   	</delete>
</mapper>


