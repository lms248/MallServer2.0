<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dao.basic.ShopDao">
	
	<sql id="sql_select">
		select * from shop      
	</sql>
	
	<sql id="sql_cols">
		id,shopId,name,title,details,logo,logoThumb,image,thumbnail,contactPhone,type,createTime
	</sql>
	
	<sql id="sql_cols_value">
		#{id},#{shopId},#{name},#{title},#{details},#{logo},#{logoThumb},
		#{image},#{thumbnail},#{contactPhone},#{type},#{createTime}
	</sql>
	
	<!-- 根据ID加载对应店铺 -->
	<select id="loadById" resultType="shopBean">
		<include refid="sql_select"/> 
			where id = #{id};
	</select>
	
	<!-- 根据店铺ID加载对应店铺 -->
	<select id="loadByShopId" resultType="shopBean">
		<include refid="sql_select"/> 
			where shopid = #{shopId};
	</select>
	
	<!-- 根据店铺名字加载对应店铺 -->
	<select id="loadByShopname" resultType="shopBean">
		<include refid="sql_select"/> 
			where name = #{name};
	</select>
	
	<!-- 加载所有店铺 -->
	<select id="loadAllShop" resultType="shopBean">
		<include refid="sql_select"/> 
			order by id desc 
			limit #{index},#{size};
	</select>
	
	<!-- 加载所有店铺,加入查询条件 -->
	<select id="loadAllShop_search" resultType="shopBean">
		<include refid="sql_select"/> 
			where (shopId like "%"#{searchContent}"%" or name like "%"#{searchContent}"%")
			order by id desc 
			limit #{index},#{size};
	</select>
	
	<!-- 查询表的数据总数量 -->
	<select id="count" resultType="int">
		select COUNT(*) from shop;
	</select>
	
	<!-- 插入列表数据 -->
	<insert id="save" parameterType="shopBean">
		insert into shop(<include refid="sql_cols"/>)  
             values(<include refid="sql_cols_value"/>)
	</insert>
	
	<!-- 更新列表数据 -->
	<update id="update" parameterType="shopBean">
		update shop
    		<set>
      			shopId = #{shopId},
      			name = #{name},
      			title = #{title},
      			details = #{details},
      			logo = #{logo},
      			logoThumb = #{logoThumb},
      			image = #{image},
				thumbnail = #{thumbnail},
				contactPhone = #{contactPhone},
				type = #{type},
				createTime = #{createTime}
    		</set>
  		where id=#{id}
	</update>
	
	<!-- 删除列表数据 -->
	<delete id="deleteByShopId" parameterType="shopBean">
    	delete from shop where shopid = #{shopId};
   	</delete>
</mapper>


